/*
 * O CSS foi ajustado para remover as dimensões fixas do .cropCanvas
 * (width: 300px; height: 300px;) e confiar nas dimensões
 * setadas via JavaScript e nos estilos dinâmicos inline.
 */

.container {
    position: relative;
    /* Mantido para desktops, mas será sobrescrito em mobile */
    width: 500px;
    height: 500px;
    margin: 0 auto var(--ntpopups-spacing-xl);
    background-color: var(--ntpopups-bg-overlay);
    border-radius: var(--ntpopups-border-radius);
    overflow: hidden;
}

.containerGrab {
    cursor: grab;
}

.containerGrabbing {
    cursor: grabbing;
}

.fullCanvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

/* * .cropCanvas: As dimensões (width/height) agora são setadas via JS no atributo 
 * e no style inline, para suportar o aspectRatio. O CSS mantém apenas o 
 * posicionamento e o z-index/pointer-events.
 */
.cropCanvas {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    /*
     * Borda, box-shadow e border-radius foram movidos para o inline style 
     * no JSX para suportar dimensões e formatos dinâmicos (circle/square).
     */
}

/* Esta classe pode ser removida, pois os estilos de círculo estão no inline style do JSX */
.cropCanvasCircle {
    /*border-radius: 50%;*/
    /*border: none;*/
}

.hiddenImage {
    display: none;
}

.zoomSection {
    margin-bottom: var(--ntpopups-spacing-md);
    padding: 0 var(--ntpopups-spacing-lg);
}

.zoomControls {
    display: flex;
    align-items: center;
    gap: var(--ntpopups-spacing-md);
    max-width: 500px;
    margin: 0 auto;
}

.zoomIcon {
    color: var(--ntpopups-color-text-secondary);
    flex-shrink: 0;
}

.zoomIconSmall {
    width: 20px;
    height: 20px;
}

.zoomIconLarge {
    width: 24px;
    height: 24px;
}

.zoomSlider {
    width: 100%;
    cursor: pointer;
    accent-color: var(--ntpopups-color-primary);
    height: 4px;
}

.hiddenCanvas {
    display: none;
}

/* Estilos de layout e cores */
.cropmain {
    padding: var(--ntpopups-spacing-lg) var(--ntpopups-spacing-xl) 0;
}

.header {
    color: var(--ntpopups-opposite);
    padding: var(--ntpopups-spacing-lg) 0 var(--ntpopups-spacing-lg) var(--ntpopups-spacing-xl);
    border-bottom: none;
    font-weight: var(--ntpopups-font-weight-bold);
    font-size: var(--ntpopups-font-size-title);
}

.resetButton {
    margin-right: auto;
    margin-left: var(--ntpopups-spacing-lg);
}

/*
---
## Responsividade para Telas Pequenas (Mobile)
---
*/

@media (max-width: 768px) {

    /* 1. Ajuste do MAIN/HEADER para usar padding de mobile */
    .cropmain {
        padding: var(--ntpopups-spacing-md) var(--ntpopups-mobile-padding) 0;
    }

    .header {
        padding: var(--ntpopups-spacing-md) 0 0 var(--ntpopups-mobile-padding);
        font-size: calc(var(--ntpopups-font-size-title) * 0.9);
    }

    /* 2. Tornar o container de crop fluido e sempre QUADRADO */
    .container {
        width: calc(100% - var(--ntpopups-mobile-padding) * 2);
        height: auto;
        aspect-ratio: 1 / 1;
        max-width: 450px;
        margin-left: auto;
        margin-right: auto;
    }

    /* 3. Tornar o canvas de crop fluido em relação ao container */
    .cropCanvas {
        /* A dimensão é controlada por JS (cropWidth/cropHeight), mas mantemos a posição central */
        border: 2px solid #fff;
        box-shadow: 0 0 0 2px #fff, 0 0 0 3px rgba(255, 255, 255, 0.3);
    }

    /* 4. Ajustar controles de zoom */
    .zoomControls {
        width: 100%;
        max-width: none;
        padding: 0;
    }

    .zoomSection {
        padding: 0 var(--ntpopups-mobile-padding);
    }
}

/* Garante que a largura MÁXIMA (500px) seja usada APENAS em telas maiores */
@media (min-width: 769px) {
    .container {
        width: 500px;
        height: 500px;
        aspect-ratio: unset;
    }
}
